{"version":3,"file":"stripe-service.js","names":["Stripe","stripeErrorHandling","stripe","process","env","STRIPE_KEY","createCustomers","data","method","Promise","resolve","reject","customers","create","name","email","address","postal_code","payment_method","err","response","createProduct","product_name","product_description","res","products","description","createPrice","currency","price","interval","interval_count","id","prices","unit_amount","recurring","product","createSubscription","trial_period_days","card","params","customer","items","off_session","payment_settings","payment_method_types","collection_method","payment_behavior","default_payment_method","subscriptions","paymentIntent","payInt","paymentIntents","amount","setup_future_usage","confirm","paymentMethod","payMeth","paymentMethods","type","number","exp_month","exp_year","cvc"],"sources":["../../src/services/stripe-service.js"],"sourcesContent":["import Stripe from \"stripe\";\nimport { stripeErrorHandling } from \"../helpers/helper.js\";\n\nconst stripe = Stripe(process.env.STRIPE_KEY);\n\nexport const createCustomers = (data, method) => {\n    return new Promise((resolve, reject) => {\n        stripe.customers.create(\n            {\n                name: data.name,\n                email: data.email,\n                address: {\n                    postal_code: \"default\"\n                },\n                payment_method: method\n            },\n            (err, response) => {\n                if (err) stripeErrorHandling(err);\n                else {\n                    resolve(response);\n                }\n            }\n        );\n    });\n};\n\nexport const createProduct = ({ product_name, product_description }, res) => {\n    return new Promise((resolve, reject) => {\n        stripe.products.create(\n            {\n                name: product_name,\n                description: product_description,\n            },\n            (err, response) => {\n                if (err) stripeErrorHandling(err, res);\n                else resolve(response);\n            }\n        );\n    });\n};\n\nexport const createPrice = ({ currency, price, interval, interval_count }, { id }, res) => {\n    return new Promise((resolve, reject) => {\n        stripe.prices.create(\n            {\n                unit_amount: price * 100,\n                currency: currency,\n                recurring: {\n                    interval: interval,\n                    interval_count: interval_count,\n                },\n                product: id,\n            },\n            (err, response) => {\n                if (err) stripeErrorHandling(err, res);\n                else resolve(response);\n            }\n        );\n    });\n};\n\nexport const createSubscription = ({ price, trial_period_days }, card, { id }, res) => {\n    return new Promise((resolve, reject) => {\n        let params = {\n            customer: id,\n            items: [{ price: price }],\n            trial_period_days: trial_period_days,\n            off_session: true,\n            payment_settings: {\n                payment_method_types: ['card'],\n            },\n            collection_method: \"charge_automatically\",\n            payment_behavior: \"allow_incomplete\",\n            default_payment_method: card.id\n        };\n        stripe.subscriptions.create(params, (err, response) => {\n            if (err) stripeErrorHandling(err, res);\n            else resolve(response);\n        });\n    });\n};\n\n\nexport const paymentIntent = async (customer, card) => {\n\n    const payInt = await stripe.paymentIntents.create({\n        amount: 100,\n        currency: 'usd',\n        payment_method_types: ['card'],\n        customer: customer.id,\n        setup_future_usage: \"off_session\",\n        payment_method: card,\n        confirm: true\n    });\n\n    return payInt;\n}\n\n//4000003560000008\nexport const paymentMethod = async (customer, card) => {\n    const payMeth = await stripe.paymentMethods.create({\n        type: 'card',\n        card: {\n            number: '4242424242424242',\n            exp_month: 10,\n            exp_year: 2023,\n            cvc: '314',\n        },\n    })\n    return payMeth;\n}"],"mappings":"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"}