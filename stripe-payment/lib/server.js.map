{"version":3,"file":"server.js","names":["express","dotenv","Stripe","config","stripe","process","env","STRIPE_KEY","port","PORT","app","use","json","post","req","res","testCardToken","tokens","retrieve","error","token","console","log","message","status","paymentMethod","paymentMethods","create","type","card","customerId","attach","id","customer","paymentIntent","paymentIntents","amount","currency","payment_method","confirm","automatic_payment_methods","enabled","allow_redirects","return_url","customerEmail","customerName","billingAddress","line1","line2","city","state","postal_code","country","receipt_email","send","cardToken","number","exp_month","exp_year","cvc","customers","createSource","source","productInfo","name","description","active","attributes","metadata","category","manufacturer","product","products","price","prices","unit_amount","productId","updatedProductInfo","images","update","get","session_id","query","session","checkout","sessions","payment_status","paid","payment_method_types","line_items","price_data","product_data","quantity","mode","success_url","cancel_url","url","listen"],"sources":["../src/server.js"],"sourcesContent":["import express from \"express\";\nimport dotenv from \"dotenv\";\nimport Stripe from \"stripe\";\ndotenv.config();\n\nconst stripe = Stripe(process.env.STRIPE_KEY);\nconst port = process.env.PORT;\n\nconst app = express();\napp.use(express.json());\n\napp.post(\"/create-token\", async (req, res) => {\n    try {\n        const testCardToken = 'tok_visa';\n\n        stripe.tokens.retrieve(testCardToken, (error, token) => {\n            if (error) {\n                console.log('error:', error.message);\n            }\n            if (token) {\n                console.log('token:', token);\n            }\n        });\n    } catch (error) {\n        res.status(500).json({ error: error.message });\n    }\n});\n\napp.post(\"/create-paymethod\", async (req, res) => {\n    try {\n        const paymentMethod = await stripe.paymentMethods.create({\n            type: \"card\",\n            card: {\n                token: \"tok_1OI7dtSD010bwSLtpLytEOFh\",\n            },\n        });\n\n        const customerId = \"cus_P6Jw76xFNAD7c3\";\n        await stripe.paymentMethods.attach(paymentMethod.id, {\n            customer: customerId,\n        });\n\n        res.json(paymentMethod);\n    } catch (error) {\n        res.status(500).json({ error: error.message });\n    }\n});\n\napp.post(\"/make-payment\", async (req, res) => {\n    try {\n        const customerId = \"cus_P6Jw76xFNAD7c3\";\n        const paymentIntent = await stripe.paymentIntents.create({\n            amount: 1000,\n            currency: \"usd\",\n            payment_method: \"pm_1OI7frSD010bwSLtCaA8F7JI\",\n            confirm: true,\n            customer: customerId,\n            automatic_payment_methods: {\n                enabled: true,\n                allow_redirects: \"never\"\n            },\n            return_url: \"https://localhost:3000/success\"\n        });\n        res.json(paymentIntent);\n    } catch (error) {\n        res.status(500).json({ error: error.message });\n    }\n});\n\napp.post(\"/charge\", async (req, res) => {\n    try {\n        const customerEmail = \"sri@gmail.com\";\n        const customerName = \"Sri\";\n        const billingAddress = {\n            line1: \"12 Main street\",\n            line2: \"Apt 4B\",\n            city: \"NewYork\",\n            state: \"NY\",\n            postal_code: \"10001\",\n            country: \"US\"\n        };\n        const customerId = \"cus_P6LbLHzYR9ut1o\";\n\n        let paymentIntent = await stripe.paymentIntents.create({\n            payment_method: \"pm_1OI99kSD010bwSLtIfGKoEIT\",\n            amount: 75 * 100,\n            currency: \"inr\",\n            confirm: true,\n            customer: customerId,\n            automatic_payment_methods: {\n                enabled: true,\n                allow_redirects: \"never\"\n            },\n            return_url: \"https://localhost:3000/success\",\n            receipt_email: customerEmail\n        });\n        res.send(paymentIntent);\n    } catch (error) {\n        res.status(500).json({ error: error.message });\n    }\n});\n\napp.post(\"/add-card\", async (req, res) => {\n    try {\n        const customerId = \"cus_P6Jw76xFNAD7c3\";\n        const cardToken = await stripe.tokens.create({\n            card: {\n                number: \"5555555555554444\",\n                exp_month: 12,\n                exp_year: 2025,\n                cvc: 111\n            }\n        });\n\n        const card = await stripe.customers.createSource(customerId, {\n            source: cardToken.id\n        });\n        res.json(card);\n    } catch (error) {\n        res.status(500).json({ error: error.message });\n    }\n})\n\napp.post(\"/create-product\", async (req, res) => {\n    try {\n        const productInfo = {\n            name: \"T-shirts\",\n            description: \"Cotton T-shirts\",\n            active: \"true\",\n            attributes: [\"black\", \"S\"],\n            metadata: {\n                category: \"Clothing\",\n                manufacturer: \"DNMX\"\n            }\n        }\n        const product = await stripe.products.create(productInfo);\n        res.json({ message: \"Product created\", product })\n    } catch (error) {\n        res.status(500).json({ error: error.message });\n    }\n});\n\napp.post(\"/create-price\", async (req, res) => {\n    try {\n        const price = await stripe.prices.create({\n            product: \"prod_P6bjiv88Kw2hlK\",\n            unit_amount: 10000,\n            currency: \"usd\"\n        });\n\n        res.json({ message: \"price created\", price });\n    } catch (error) {\n        res.status(500).json({ error: error.message });\n    }\n});\n\napp.post(\"/update-product\", async (req, res) => {\n    try {\n        const productId = \"prod_P6bjiv88Kw2hlK\";\n\n        const updatedProductInfo = {\n            images: [\"https://images.samsung.com/is/image/samsung/assets/in/explore/brand/5-best-android-mobile-phones-2022-in-india/banner-mobile-720x761-080422.jpg?$720_N_JPG$\"],\n            name: \"Latest mobile collection\"\n        }\n        const product = await stripe.products.update(productId, updatedProductInfo);\n        res.json({ message: \"Product updated\", product });\n    } catch (error) {\n        res.status(500).json({ error: error.message });\n    }\n});\n\napp.get(\"/success\", async (req, res) => {\n    const session_id = req.query.session_id;\n    try {\n        const session = await stripe.checkout.sessions.retrieve(session_id);\n\n        if (session.payment_status === paid) {\n            res.send(\"Payment successful\");\n        } else {\n            res.send(\"Payment unsuccessful\");\n        }\n    } catch (error) {\n        res.status(500).json({ error: error.message });\n    }\n});\n\napp.get(\"/cancel\", async (req, res) => {\n    res.send(\"Payment cancelled\");\n});\n\napp.post(\"/create-checkout-session\", async (req, res) => {\n    try {\n        const session = await stripe.checkout.sessions.create({\n            payment_method_types: [\"card\"],\n            line_items: [\n                {\n                    price_data: {\n                        currency: 'inr',\n                        product_data: {\n                            name: \"product name\",\n                        },\n                        unit_amount: 1000,\n                    },\n                    quantity: 1,\n                }\n            ],\n            mode: \"payment\",\n            success_url: \"http://localhost:3000/success?session_id={CHECKOUT_SESSION_ID}\",\n            cancel_url: \"http://localhost:3000/cancel\"\n        });\n        res.json({ url: session.url });\n    } catch (error) {\n        res.status(500).json({ error: error.message });\n    }\n});\n\napp.listen(port, () => {\n    console.log(`Server listening on port ${port}`);\n});"],"mappings":"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"}